# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-02-19 22:23
from __future__ import unicode_literals

from django.db import migrations


def copy_src_to_dst(Source, Destination):
    for src in Source.objects.all():
        dst = Destination(title=src.title, start=src.start,
                          description=src.description, slots=src.slots)
        dst.save()
        dst.speakers.set(src.speakers.all())
        src.delete()


def forward_course_abc_to_mti(apps, schema_editor):
    """
    For each ABC (Abstract Base Class), an MTI (Multi Table Inheritance)
    with all attributes should be instantiated. The MTI must then be saved.
    Then we'll associate the Speakers on the ABC on the MIT, and finally,
    delete the ABC.
    """
    copy_src_to_dst(
        # the models are loaded like this because, during a migration, we need
        # to get what's called a 'history model', which is the model with its
        # state during that specific time, migration-wise.
        apps.get_model('core', 'CourseOld'),
        apps.get_model('core', 'Course')
    )


def backward_course_abc_to_mti(apps, schema_editor):
    """
    For each ABC (Abstract Base Class), an MTI (Multi Table Inheritance)
    with all attributes should be instantiated. The MTI must then be saved.
    Then we'll associate the Speakers on the ABC on the MIT, and finally,
    delete the ABC.
    """
    copy_src_to_dst(
        # the models are loaded like this because, during a migration, we need
        # to get what's called a 'history model', which is the model with its
        # state during that specific time, migration-wise.
        apps.get_model('core', 'CourseOld'),
        apps.get_model('core', 'Course')
    )


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0009_course'),
    ]

    operations = [
        migrations.RunPython(forward_course_abc_to_mti,
                             backward_course_abc_to_mti)
    ]
